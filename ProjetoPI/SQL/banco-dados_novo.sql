drop database if exists usjt_pi;

-- MySQL Script generated by MySQL Workbench
-- Tue Apr  2 20:12:16 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema usjt_pi
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `usjt_pi` DEFAULT CHARACTER SET utf8 ;
USE `usjt_pi` ;

-- -----------------------------------------------------
-- Table `usjt_pi`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usjt_pi`.`usuario` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usjt_pi`.`professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usjt_pi`.`professor` (
  `professor_id` INT NOT NULL,
  `administrador` INT NULL DEFAULT 0,
  `matricula` VARCHAR(45) NULL,
  PRIMARY KEY (`professor_id`),
  INDEX `fk_Professor_Usuario_idx` (`professor_id` ASC) VISIBLE,
  UNIQUE INDEX `matricula_UNIQUE` (`matricula` ASC) VISIBLE,
  CONSTRAINT `fk_Professor_Usuario`
    FOREIGN KEY (`professor_id`)
    REFERENCES `usjt_pi`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usjt_pi`.`aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usjt_pi`.`aluno` (
  `aluno_id` INT NOT NULL,
  `ra` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`aluno_id`),
  UNIQUE INDEX `ra_UNIQUE` (`ra` ASC) VISIBLE,
  CONSTRAINT `fk_Aluno_Usuario1`
    FOREIGN KEY (`aluno_id`)
    REFERENCES `usjt_pi`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usjt_pi`.`tema`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usjt_pi`.`tema` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dt_cadastro` DATETIME NULL,
  `titulo` VARCHAR(100) NOT NULL,
  `introducao` VARCHAR(250) NULL,
  `requisitos` VARCHAR(1000) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usjt_pi`.`turma`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usjt_pi`.`turma` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `semestre_letivo` INT NULL,
  `ano_letivo` INT NULL,
  `sigla` VARCHAR(45) NULL,
  `tema_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_turma_tema1_idx` (`tema_id` ASC) VISIBLE,
  UNIQUE INDEX `idx_uk_sigla_ano_semestre` (`semestre_letivo` ASC, `ano_letivo` ASC, `sigla` ASC) VISIBLE,
  CONSTRAINT `fk_turma_tema1`
    FOREIGN KEY (`tema_id`)
    REFERENCES `usjt_pi`.`tema` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usjt_pi`.`grupo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usjt_pi`.`grupo` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `orientador_id` INT NOT NULL,
  `numero` INT NOT NULL,
  `nome` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_grupo_Professor1_idx` (`orientador_id` ASC) VISIBLE,
  CONSTRAINT `fk_grupo_Professor1`
    FOREIGN KEY (`orientador_id`)
    REFERENCES `usjt_pi`.`professor` (`professor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

ALTER TABLE `usjt_pi`.`grupo` 
ADD COLUMN `turma_id` INT NULL AFTER `nome`,
ADD INDEX `fk_grupo_turma_idx` (`turma_id` ASC) VISIBLE;
;
ALTER TABLE `usjt_pi`.`grupo` 
ADD CONSTRAINT `fk_grupo_turma`
  FOREIGN KEY (`turma_id`)
  REFERENCES `usjt_pi`.`turma` (`id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;


-- -----------------------------------------------------
-- Table `usjt_pi`.`turma_aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usjt_pi`.`turma_aluno` (
  `Aluno_id` INT NOT NULL,
  `turma_id` INT NOT NULL,
  `grupo_id` INT NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`),
  INDEX `fk_Aluno_has_turma_turma1_idx` (`turma_id` ASC) VISIBLE,
  INDEX `fk_Aluno_has_turma_Aluno1_idx` (`Aluno_id` ASC) VISIBLE,
  INDEX `fk_Aluno_has_turma_grupo1_idx` (`grupo_id` ASC) VISIBLE,
  INDEX `idx_aluno_turma` (`Aluno_id` ASC, `turma_id` ASC) VISIBLE,
  CONSTRAINT `fk_Aluno_has_turma_Aluno1`
    FOREIGN KEY (`Aluno_id`)
    REFERENCES `usjt_pi`.`aluno` (`aluno_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Aluno_has_turma_turma1`
    FOREIGN KEY (`turma_id`)
    REFERENCES `usjt_pi`.`turma` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Aluno_has_turma_grupo1`
    FOREIGN KEY (`grupo_id`)
    REFERENCES `usjt_pi`.`grupo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usjt_pi`.`banca`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usjt_pi`.`banca` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `grupo_id` INT NOT NULL,
  `data` DATETIME NULL,
  `sala` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_banca_grupo1_idx` (`grupo_id` ASC) VISIBLE,
  CONSTRAINT `fk_banca_grupo1`
    FOREIGN KEY (`grupo_id`)
    REFERENCES `usjt_pi`.`grupo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usjt_pi`.`professores_banca`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usjt_pi`.`professores_banca` (
  `banca_id` INT NOT NULL,
  `Professor_id` INT NOT NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  `avaliacao` DECIMAL(4,2) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_banca_has_Professor_Professor1_idx` (`Professor_id` ASC) VISIBLE,
  INDEX `fk_banca_has_Professor_banca1_idx` (`banca_id` ASC) VISIBLE,
  INDEX `idx_banca_prof` (`banca_id` ASC, `Professor_id` ASC) VISIBLE,
  CONSTRAINT `fk_banca_has_Professor_banca1`
    FOREIGN KEY (`banca_id`)
    REFERENCES `usjt_pi`.`banca` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_banca_has_Professor_Professor1`
    FOREIGN KEY (`Professor_id`)
    REFERENCES `usjt_pi`.`professor` (`professor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usjt_pi`.`atividade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usjt_pi`.`atividade` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `tema_id` INT NOT NULL,
  `numero` INT NULL,
  `descricao` VARCHAR(250) NULL,
  `formato_entrega` VARCHAR(45) NULL,
  `dt_inicio` DATETIME NULL,
  `dt_fim` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_atividade_tema1_idx` (`tema_id` ASC) VISIBLE,
  CONSTRAINT `fk_atividade_tema1`
    FOREIGN KEY (`tema_id`)
    REFERENCES `usjt_pi`.`tema` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usjt_pi`.`entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usjt_pi`.`entrega` (
  `grupo_id` INT NOT NULL,
  `atividade_id` INT NOT NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  `dt_cadastro` TIMESTAMP NOT NULL DEFAULT NOW(),
  `link_atividade` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_grupo_has_entregas_entregas1_idx` (`atividade_id` ASC) VISIBLE,
  INDEX `fk_grupo_has_entregas_grupo1_idx` (`grupo_id` ASC) VISIBLE,
  INDEX `idx_grupo_ativ` (`grupo_id` ASC, `atividade_id` ASC) VISIBLE,
  CONSTRAINT `fk_grupo_has_entregas_grupo1`
    FOREIGN KEY (`grupo_id`)
    REFERENCES `usjt_pi`.`grupo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_grupo_has_entregas_entregas1`
    FOREIGN KEY (`atividade_id`)
    REFERENCES `usjt_pi`.`atividade` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usjt_pi`.`avaliacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usjt_pi`.`avaliacao` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `entrega_id` INT NOT NULL,
  `turma_aluno_id` INT NOT NULL,
  `nota` DECIMAL(4,2) NULL,
  `dt_avaliacao` DATETIME NULL,
  `comentarios` VARCHAR(100) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Avaliacao_entregas1_idx` (`entrega_id` ASC) VISIBLE,
  INDEX `fk_Avaliacao_Aluno_has_turma1_idx` (`turma_aluno_id` ASC) VISIBLE,
  CONSTRAINT `fk_Avaliacao_entregas1`
    FOREIGN KEY (`entrega_id`)
    REFERENCES `usjt_pi`.`entrega` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Avaliacao_Aluno_has_turma1`
    FOREIGN KEY (`turma_aluno_id`)
    REFERENCES `usjt_pi`.`turma_aluno` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

INSERT INTO usuario (nome, email, senha) VALUES
-- ALUNOS
('Gustavo', 'contatogustavopedro20@gmail.com', '1234@@'),
('Rafael L', 'rafael@email.com', '1234@@'),
('Luiz Henrique', 'luizh@email.com', '1234@@'),
('Rafael Z', 'rafaelz@email.com', '1234@@'),
('Richard', 'richard@email.com', '1234@@'),
('Jostein', 'jostein@email.com', '1234@@'),
('Umberto', 'umberto@email.com', '1234@@'),
('Neil', 'neil@email.com', '1234@@'),
('Stephen', 'stephen@email.com', '1234@@'),
('Carlos', 'carlos@email.com', '1234@@'),
('Julio', 'julio@email.com', '1234@@'),
('Vanessa', 'vannesa@email.com', '1234@@'),
('João', 'joao@email.com', '1234@@'),
('Maria', 'maria@email.com', '1234@@'),
('Antônia', 'antonia@email.com', '1234@@'),
('Matheus', 'matheus@email.com', '1234@@'),
('Eduardo', 'eduardo@email.com', '1234@@'),
('Felipe', 'felipe@email.com', '1234@@'),
('Luis', 'luis@email.com', '1234@@'),
('Joyse', 'joyse@email.com', '1234@@'),
('Carla', 'carla@email.com', '1234@@'),
('Pedro', 'pedro@email.com', '1234@@'),
('José', 'jose@email.com', '1234@@'),
('Neto', 'neto@email.com', '1234@@'),
('Adão', 'adao@email.com', '1234@@'),
('Adamastor', 'adamastor@email.com', '1234@@'),
('Adelair', 'adelair@email.com', '1234@@'),
('Aldemir', 'aldemir@email.com', '1234@@'),
('Benetido', 'benetido@email.com', '1234@@'),
('Bruce', 'bruce@email.com', '1234@@'),
('Guilherme', 'guilherme@email.com', '1234@@'),
('Heitor', 'heitor@email.com', '1234@@'),
('Iago', 'iago@email.com', '1234@@'),
('Jarbas', 'jarbas@email.com', '1234@@'),
('Jason', 'jason@email.com', '1234@@'),
('Jonas', 'jonas@email.com', '1234@@'),
('Nilson', 'nilson@email.com', '1234@@'),
('Odin', 'odin@email.com', '1234@@'),
('Thor', 'thor@email.com', '1234@@'),
('Loki', 'loki@email.com', '1234@@'),
-- PROFESSORS
('Olavo Silva', 'olavosilva@usjt.com', '1234##'),
('Osmar Almeida', 'osmaralmeida@usjt.com', '1234##'),
('Julio Andrade', 'julioandrade@usjt.com', '1234##'),
('Maria Helena', 'mariahelena@usjt.com', '1234##'),
('Andre Silva', 'andresilva@usjt.com', '1234##'),
('Carla Soares', 'carlasoares@usjt.com', '1234##'),
('Rafael Augusto', 'rafaelagusto@usjt.com', '1234##'),
('Edson Farias', 'edsonfarias@usjt.com', '1234##'),
('Edson Carlos', 'edsoncarlos@usjt.com', '1234##'),
('Angela Machado', 'angelamachado@usjt.com', '1234##'),
('Carlos Almeida', 'carlosalmeida@usjt.com', '1234##'),
-- PROFESSORES ADM
('Nelson', 'nelson@usjt.com', '1234##'),
('Pier', 'pier@usjt.com', '1234##'),
('Keity', 'keity@usjt.com', '1234##');

INSERT INTO aluno (aluno_id, ra) VALUES
(01, '1000001'),
(02, '1000002'),
(03, '1000003'),
(04, '1000004'),
(05, '1000005'),
(06, '1000006'),
(07, '1000007'),
(08, '1000008'),
(09, '1000009'),
(10, '1000010'),
(11, '1000011'),
(12, '1000012'),
(13, '1000013'),
(14, '1000014'),
(15, '1000015'),
(16, '1000016'),
(17, '1000017'),
(18, '1000018'),
(19, '1000019'),
(20, '1000020'),
(21, '1000021'),
(22, '1000022'),
(23, '1000023'),
(24, '1000024'),
(25, '1000025'),
(26, '1000026'),
(27, '1000027'),
(28, '1000028'),
(29, '1000029'),
(30, '1000030'),
(31, '1000031'),
(32, '1000032'),
(33, '1000033'),
(34, '1000034'),
(35, '1000035'),
(36, '1000036'),
(37, '1000037'),
(38, '1000038'),
(39, '1000039'),
(40, '1000040');

INSERT INTO professor (professor_id, administrador, matricula) VALUES
(41, 0, '1100041'),
(42, 0, '1100042'),
(43, 0, '1100043'),
(44, 0, '1100044'),
(45, 0, '1100045'),
(46, 0, '1100046'),
(47, 0, '1100047'),
(48, 0, '1100048'),
(49, 0, '1100049'),
(50, 0, '1100050'),
(51, 0, '1100051'),
(52, 1, '1100052'), -- Nelson admin
(53, 1, '1100053'), -- Pier admin
(54, 1, '1100054'); -- Keit admin

INSERT INTO tema (dt_cadastro, titulo, introducao, requisitos) VALUES
(20190315, 'Criar um sistema Web', 'Descrição: ...', 'Professores irão passar em aula: ...');

INSERT INTO turma (semestre_letivo, ano_letivo, sigla, tema_id) VALUES
(01, 2019, 'CCPAN-MCA', 1),
(01, 2019, 'SINAN-MCA', 1);
/*(01, 2018, 'DEVAN-MCA', 1),
(02, 2018, 'JEE2AN-MCA', 1);*/

INSERT INTO grupo (orientador_id, numero, nome, turma_id) VALUES
-- Grupos primeira turma
(53, 101, 'The Godfather', 1),
(53, 102, 'The Dark Knight', 1),
(53, 103, 'The Shawshank Redemption', 1),
(53, 104, 'Star Wars: Episode V', 1),
(53, 105, 'The Lord of the Rings', 1),

-- Grupos segunda turma
(54, 106, 'Back to the Future', 2),
(54, 107, 'Star Wars: Episode IV', 2),
(54, 108, 'Terminator 2: Judgment Day', 2),
(54, 109, 'The Lion King', 2),
(54, 110, 'Jurassic Park', 2);

/*
-- Grupos terceira turma
(50, 111, 'Caminho das índias', 3),
(50, 112, 'O Cravo e A Rosa', 3),
(50, 113, 'O Clone', 3),
(50, 114, 'Páginas da vida', 3),
(50, 115, 'Mulheres Apaixonadas', 3),

-- Grupos quarta turma
(45, 116, 'A Favorita', 4),
(45, 117, 'Kassandra', 4),
(45, 118, 'Maria do Bairro', 4),
(45, 119, 'Os Ricos Também Choram', 4),
(45, 120, 'Marimar', 4);*/

INSERT INTO turma_aluno (Aluno_id, turma_id, grupo_id) VALUES
-- GRUPOS DA TURMA 1
(01, 1, 1),
(02, 1, 1),
(03, 1, 1),

(04, 1, 2),
(05, 1, 2),
(06, 1, 2),

(07, 1, 3),
(08, 1, 3),
(09, 1, 3),

(10, 1, 4),
(11, 1, 4),
(12, 1, 4),

(13, 1, 5),
(14, 1, 5),
(15, 1, 5),

(16, 1, NULL),
(17, 1, NULL),
(18, 1, NULL),
(19, 1, NULL),
(20, 1, NULL),

-- GRUPOS DA TURMA 2
(21, 2, 6),
(22, 2, 6),
(23, 2, 6),

(24, 2, 7),
(25, 2, 7),
(26, 2, 7),

(27, 2, 8),
(28, 2, 8),
(29, 2, 8),

(30, 2, 9),
(31, 2, 9),
(32, 2, 9),

(33, 2, 10),
(34, 2, 10),
(35, 2, 10),

(36, 2, NULL),
(37, 2, NULL),
(38, 2, NULL),
(39, 2, NULL),
(40, 2, NULL);

/*

-- GRUPOS DA TURMA 3
(01, 3, 11),
(02, 3, 11),
(03, 3, 11),

(04, 3, 12),
(05, 3, 12),
(06, 3, 12),

(07, 3, 13),
(08, 3, 13),
(09, 3, 13),

(10, 3, 14),
(11, 3, 14),
(12, 3, 14),

(13, 3, 15),
(14, 3, 15),
(15, 3, 15),

(16, 3, NULL),
(17, 3, NULL),
(18, 3, NULL),
(19, 3, NULL),
(20, 3, NULL),

-- GRUPOS DA TURMA 4
(01, 4, 16),
(02, 4, 16),
(03, 4, 16),

(04, 4, 17),
(05, 4, 17),
(06, 4, 17),

(07, 4, 18),
(08, 4, 18),
(09, 4, 18),

(10, 4, 19),
(11, 4, 19),
(12, 4, 19),

(13, 4, 20),
(14, 4, 20),
(15, 4, 20),

(16, 4, NULL),
(17, 4, NULL),
(18, 4, NULL),
(19, 4, NULL),
(20, 4, NULL);*/

INSERT INTO atividade (tema_id, numero, descricao, formato_entrega, dt_inicio, dt_fim) VALUES
(1, 1, 'Implementação de 3 classes (do model)', 'Enviar link da atividade', '20190301', '20190301'),
(1, 2, 'Implementação de todas as Classes (do model)', 'Enviar link da atividade', '20190301', '20190308'),
(1, 3, 'Protótipo das telas', 'Enviar link da atividade', '20190301', '20190322'),
(1, 4, 'Implementação das classes DAO e Service de 1 model', 'Enviar link da atividade', '20190301', '20190322'),
(1, 5, 'Implementação de todos os DAOs e Services', 'Enviar link da atividade', '20190301', '20190329'),
(1, 6, 'Script de carga de dados.', 'Enviar link da atividade', '20190301', '20190405'),
(1, 7, 'Implementação da funcionalidade de cadastro de um CRUD', 'Enviar link da atividade', '20190301', '20190412'),
(1, 8, 'Implementação da funcionalidade de cadastro de todos os CRUDs', 'Enviar link da atividade', '20190301', '20190419'),
(1, 9, 'Implementação de 1 Relatório/Consulta utilizando o forEach para apresentação da lista', 'Enviar link da atividade', '20190301', '20190426'),
(1, 10, 'Implementação completa de um CRUD', 'Enviar link da atividade', '20190301', '20190530');